var DoubanAuth=function(){"use strict";var conf=DoubanAuthConf,redirectURL="https://"+chrome.runtime.id+".chromiumapp.org/auth/callback",redirectRe=new RegExp(redirectURL+"[#?](.*)"),access_token=null;return{getToken:function(callback){function parseRedirectFragment(fragment){var pairs=fragment.split(/&/),values={};return pairs.forEach(function(pair){var nameval=pair.split(/=/);values[nameval[0]]=nameval[1]}),values}function handleProviderResponse(values){console.log("providerResponse",values),values.hasOwnProperty("access_token")?setAccessToken(values.access_token):values.hasOwnProperty("code")?exchangeCodeForToken(values.code):callback(new Error("Neither access_token nor code avialable."))}function exchangeCodeForToken(code){var xhr=new XMLHttpRequest;xhr.open("POST","https://www.douban.com/service/auth2/token?client_id="+conf.api_key+"&client_secret="+conf.api_secret+"&redirect_uri="+redirectURL+"&grant_type=authorization_code&code="+code),xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),xhr.setRequestHeader("Accept","application/json"),xhr.onload=function(){if(200===this.status){var response=JSON.parse(this.responseText);console.log(response),response.hasOwnProperty("access_token")?setAccessToken(response.access_token):callback(new Error("Cannot obtain access_token from code."))}else console.log("code exchange status:",this.status),callback(new Error("Code exchange failed"))},xhr.send()}function setAccessToken(token){access_token=token,console.log("Setting access_token: ",access_token),callback(null,access_token)}if(access_token)return void callback(null,access_token);var options={interactive:!0,url:"https://www.douban.com/service/auth2/auth?client_id="+conf.api_key+"&response_type=code&redirect_uri="+encodeURIComponent(redirectURL)+"&scope="+conf.scopes};chrome.identity.launchWebAuthFlow(options,function(redirectUri){if(console.log("launchWebAuthFlow completed",chrome.runtime.lastError,redirectUri),chrome.runtime.lastError)return void callback(new Error(chrome.runtime.lastError));var matches=redirectUri.match(redirectRe);matches&&matches.length>1?handleProviderResponse(parseRedirectFragment(matches[1])):callback(new Error("Invalid redirect URI"))})}}}();