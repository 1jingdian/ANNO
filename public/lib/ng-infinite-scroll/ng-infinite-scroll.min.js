var mod;mod=angular.module("infinite-scroll",[]),mod.directive("infiniteScroll",["$rootScope","$timeout",function($rootScope,$timeout){return{link:function(scope,elem,attrs){var checkWhenEnabled,handler,scrollDistance,scrollEnabled,scrollElemSel=attrs.scrollElemSel||"body",scrollElem=document.querySelector(scrollElemSel),$scrollElem=angular.element(scrollElem);return scrollDistance=0,null!=attrs.infiniteScrollDistance&&scope.$watch(attrs.infiniteScrollDistance,function(value){return scrollDistance=parseInt(value,10)}),scrollEnabled=!0,checkWhenEnabled=!1,null!=attrs.infiniteScrollDisabled&&scope.$watch(attrs.infiniteScrollDisabled,function(value){return scrollEnabled=!value,scrollEnabled&&checkWhenEnabled?(checkWhenEnabled=!1,handler()):void 0}),handler=function(){var elementBottom,remaining,shouldScroll,windowBottom;return windowBottom=scrollElem.clientHeight+scrollElem.scrollTop,elementBottom=elem[0].offsetTop+elem[0].clientHeight,remaining=elementBottom-windowBottom,shouldScroll=remaining<=scrollElem.clientHeight*scrollDistance,shouldScroll&&scrollEnabled?$rootScope.$$phase?scope.$eval(attrs.infiniteScroll):scope.$apply(attrs.infiniteScroll):shouldScroll?checkWhenEnabled=!0:void 0},$scrollElem.on("scroll",_.throttle(handler,200)),scope.$on("$destroy",function(){return $scrollElem.off("scroll",handler)}),$timeout(function(){return attrs.infiniteScrollImmediateCheck?scope.$eval(attrs.infiniteScrollImmediateCheck)?handler():void 0:handler()},0)}}}]);